---
name: build
on: [push, pull_request]
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go:
          - '1.17'
          - '1.18'
    env:
      SSH_HOST: ssh.example.com
      SSH_PORT: 8022
      SSH_REALM: EXAMPLE.COM
      SSH_USERNAME: test
      SSH_PASSWORD: password
      SSH_KEYTAB: /home/runner/work/sshkrb5/sshkrb5/testdata/test.keytab
      KRB5_CONFIG: /home/runner/work/sshkrb5/sshkrb5/testdata/krb5.conf
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: Create infrastructure
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq libkrb5-dev krb5-user
          sudo docker buildx build --target kdc --tag kdc testdata/
          sudo docker buildx build --target ssh --tag ssh testdata/
          sudo docker buildx build --target keytab --output type=local,dest=testdata/ testdata/
          sudo docker run -d --tmpfs /tmp --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /etc/localtime:/etc/localtime:ro -p 127.0.0.1:88:88 -p 127.0.0.1:88:88/udp -p 127.0.0.1:464:464 -p 127.0.0.1:464:464/udp --rm --name kdc kdc
          sudo docker run -d --tmpfs /tmp --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /etc/localtime:/etc/localtime:ro -p 127.0.0.1:${SSH_PORT:-22}:22 --rm --name ssh --hostname $SSH_HOST ssh
          echo 127.0.0.1 $SSH_HOST | sudo tee -a /etc/hosts
          sudo chmod 644 $SSH_KEYTAB
          echo $SSH_PASSWORD | kinit $SSH_USERNAME@$SSH_REALM
      - name: Test (gokrb5)
        run: go test -v -coverprofile=gokrb5.out ./...
      - name: Test (apcera)
        run: go test -v -coverprofile=apcera.out -tags apcera ./...
      - name: Build (SSPI)
        run: go build ./...
        env:
          GOOS: windows
      - name: Install coverage tools
        run: |
          go get github.com/wadey/gocovmerge
          go get github.com/mattn/goveralls
        env:
          GO111MODULE: off
      - name: Merge coverage reports
        run: gocovmerge gokrb5.out apcera.out >cover.out
      - name: Send coverage
        run: goveralls -coverprofile=cover.out -service=github
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3.0.0
        with:
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
